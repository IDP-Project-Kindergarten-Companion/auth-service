# docker-compose.yml for auth-service

services:
  # Your authentication service
  auth-service:
    build: .
    container_name: auth_service_app
    ports:
      # Flask app runs on 5051 internally, mapped to 8081 on host
      - "8081:5051"
    environment:
      # Connection string points to the 'mongo' service name
      MONGO_URI: mongodb://mongo:27017/authdb
      FLASK_APP: run.py
      FLASK_ENV: development # Change to production later
    depends_on:
      - mongo
    networks:
      - app-network
    # Add volumes if needed for development hot-reloading
    # volumes:
    #   - ./auth_service:/app/auth_service
    #   - ./run.py:/app/run.py

  # MongoDB database service for Authentication
  mongo:
    image: mongo:latest
    container_name: auth_mongo_db # Renamed for clarity if running both compose files
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    # No ports exposed to host unless needed for direct debugging

  # Mongo Express for viewing the Authentication DB
  mongo-express-auth: # Renamed service for clarity
    image: mongo-express:latest
    container_name: mongo_express_auth_ui
    restart: always
    ports:
      # Expose Mongo Express on host port 8088
      - "8088:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo # Points to the MongoDB service name above
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER:-admin} # Optional basic auth for Mongo Express itself
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD:-password}
    depends_on:
      - mongo # Wait for the database to be ready
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data: # Volume for auth DB data
    driver: local

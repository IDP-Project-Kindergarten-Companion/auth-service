# In auth-service/.github/workflows/ci-cd.yml
name: Auth Service CI (Build, Push, Update Manifest)

on:
  push:
    branches:
      - main # Or your primary branch
  workflow_dispatch:

jobs:
  build-and-update-manifest:
    runs-on: ubuntu-latest
    env:
      # Docker and Image Configuration
      DOCKER_IMAGE_NAME: mariuspreda/auth-service
      
      # Kubernetes Configuration
      K8S_NAMESPACE: kindergarten-app 
      # K8S_DEPLOYMENT_NAME: auth-service-deployment # Not strictly needed by this revised workflow but good for context
      
      # Deployment Repository Configuration
      DEPLOYMENT_REPO_OWNER_SLASH_NAME: IDP-Project-Kindergarten-Companion/deployment
      # Path to the K8s deployment YAML for this service WITHIN the 'deployment' repository
      K8S_MANIFEST_PATH_IN_DEPLOY_REPO: k8s/core-services/auth/auth-service-k8s.yaml
      # Name of the container within your K8s deployment manifest for this service
      K8S_CONTAINER_NAME: auth-service-container 

    steps:
      - name: Checkout auth-service source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} # Docker Hub PAT

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: . # Build from the root of the auth-service repo
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:latest
            ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Install yq (mikefarah/yq)
        run: |
          echo "Downloading mikefarah/yq..."
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          echo "yq version:"
          yq --version

      - name: Checkout Deployment Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.DEPLOYMENT_REPO_OWNER_SLASH_NAME }}
          path: deployment-repo # Checkout to a specific path
          token: ${{ secrets.PAT_FOR_DEPLOYMENT_REPO }} # GitHub PAT with repo scope

      - name: Update Kubernetes Deployment Manifest with new image tag using yq
        run: |
          DEPLOYMENT_FILE_FULL_PATH="deployment-repo/${{ env.K8S_MANIFEST_PATH_IN_DEPLOY_REPO }}"
          NEW_IMAGE_WITH_TAG="${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}"
          
          echo "Updating image in Kubernetes manifest '${DEPLOYMENT_FILE_FULL_PATH}' to '${NEW_IMAGE_WITH_TAG}' for container '${{ env.K8S_CONTAINER_NAME }}'"
          
          # Correct yq syntax for mikefarah/yq to update the image for the specific container name
          # This command finds the container with the matching name and sets its image.
          # The expression is the first argument, then -i for in-place, then the file.
          yq '(.spec.template.spec.containers[] | select(.name == "${{ env.K8S_CONTAINER_NAME }}").image) = strenv(NEW_IMAGE_WITH_TAG)' -i "${DEPLOYMENT_FILE_FULL_PATH}"
          # Using strenv(NEW_IMAGE_WITH_TAG) ensures the value is treated as a string and properly quoted if needed.
          # Make sure NEW_IMAGE_WITH_TAG is available as an environment variable to yq if using strenv,
          # or quote it directly in the expression if not. For simplicity in GH Actions, direct quoting is often easier:
          # yq '(.spec.template.spec.containers[] | select(.name == "${{ env.K8S_CONTAINER_NAME }}").image) = "'"${NEW_IMAGE_WITH_TAG}"'"' -i "${DEPLOYMENT_FILE_FULL_PATH}"
          
          echo "Image tag updated in local checkout of '${DEPLOYMENT_FILE_FULL_PATH}'. Verifying content:"
          cat "${DEPLOYMENT_FILE_FULL_PATH}"

      - name: Commit and Push K8s YAML changes to Deployment Repo
        if: success() # Only run if previous steps were successful
        env:
          GIT_COMMITTER_NAME: "GitHub Actions Bot"
          GIT_COMMITTER_EMAIL: "actions-bot@github.com"
          GIT_AUTHOR_NAME: "GitHub Actions Bot"
          GIT_AUTHOR_EMAIL: "actions-bot@github.com"
        run: |
          TARGET_FILE_IN_DEPLOY_REPO_RELATIVE_PATH="${{ env.K8S_MANIFEST_PATH_IN_DEPLOY_REPO }}"
          
          cd deployment-repo # Change directory into the checked-out deployment repository
          
          echo "--- Debugging Push Step ---"
          echo "Current directory: $(pwd)"
          echo "Git remote -v:"
          git remote -v
          echo "Git status before add for '${TARGET_FILE_IN_DEPLOY_REPO_RELATIVE_PATH}':"
          git status -s "${TARGET_FILE_IN_DEPLOY_REPO_RELATIVE_PATH}" 

          # Check if the specific file was modified and has changes compared to HEAD
          if git diff --quiet HEAD -- "${TARGET_FILE_IN_DEPLOY_REPO_RELATIVE_PATH}"; then
            echo "File '${TARGET_FILE_IN_DEPLOY_REPO_RELATIVE_PATH}' has NO effective changes compared to HEAD of deployment repo. Nothing to commit."
          else
            echo "File '${TARGET_FILE_IN_DEPLOY_REPO_RELATIVE_PATH}' has changes. Proceeding with commit and push."
            git add "${TARGET_FILE_IN_DEPLOY_REPO_RELATIVE_PATH}"
            
            echo "Git status after add for '${TARGET_FILE_IN_DEPLOY_REPO_RELATIVE_PATH}':"
            git status -s "${TARGET_FILE_IN_DEPLOY_REPO_RELATIVE_PATH}"

            echo "Attempting to commit..."
            git commit -m "Update auth-service image to ${{ github.sha }} in K8s manifest

            Triggered by commit ${{ github.sha }} in ${{ github.repository }}"
            
            echo "Attempting to push to remote main branch of ${{ env.DEPLOYMENT_REPO_OWNER_SLASH_NAME }}..."
            # Using x-access-token for PAT authentication with git push over HTTPS
            git push https://x-access-token:${{ secrets.PAT_FOR_DEPLOYMENT_REPO }}@github.com/${{ env.DEPLOYMENT_REPO_OWNER_SLASH_NAME }}.git HEAD:main
            echo "Push command executed. Check GitHub UI for commit in deployment repository."
          fi
          echo "--- End Debugging Push Step ---"
